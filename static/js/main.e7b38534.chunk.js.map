{"version":3,"sources":["mydarkmode.jsx","DynamicChart.jsx","Person.jsx","PersonList.jsx","AddDialog.jsx","App.jsx","serviceWorkerRegistration.js","reportWebVitals.js","index.jsx"],"names":["themeName","contrastColor","axisCommon","axisLine","lineStyle","color","splitLine","splitArea","areaStyle","minorSplitLine","colorPalette","theme","darkMode","axisPointer","crossStyle","label","legend","textStyle","title","subtextStyle","toolbox","iconStyle","borderColor","dataZoom","brushStyle","handleStyle","moveHandleStyle","opacity","fillerColor","emphasis","dataBackground","width","selectedDataBackground","visualMap","timeline","controlStyle","calendar","dayLabel","monthLabel","yearLabel","timeAxis","logAxis","valueAxis","categoryAxis","line","symbol","graph","gauge","candlestick","itemStyle","color0","borderColor0","show","echarts","DynamicChart","props","option","tooltip","trigger","xAxis","type","data","x","yAxis","max","min","series","name","y","smooth","markLine","silent","baseline","style","height","Person","useState","working","setWorking","showCamera","setShowCamera","imgBase64","setImgBase64","num","setData","timeId","useRef","baseurl","ip","port","prefersDarkMode","useMediaQuery","useEffect","current","setInterval","fetch","then","response","json","info","newData","concat","Date","toLocaleTimeString","value","shift","catch","error","console","log","clearInterval","handleClose","Card","elevation","variant","Grid","container","spacing","direction","alignItems","justify","item","ButtonGroup","aria-label","Button","startIcon","onClick","Hidden","xsDown","deleteCallback","uuid","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","alt","src","DialogActions","autoFocus","PersonList","Box","p","items","map","xs","md","key","AddDialog","onKeyPress","event","code","handleSubmit","TextField","onChange","handleInputChange","inputs","endIcon","Refresh","handleGenNameClick","handleGenColorClick","textAlign","fontSize","fontWeight","onChangeComplete","setColor","hex","genConfig","dictionaries","adjectives","animals","separator","ERROR_CODE","ERROR_CAPTION","Map","useStyles","makeStyles","root","display","flexWrap","flexGrow","appbar","zIndex","menuButton","marginRight","fabGroup","position","bottom","right","search","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","breakpoints","up","searchIcon","padding","pointerEvents","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","backdrop","Alert","App","setInputs","OrderedMap","setItems","openAddDialog","setOpenAddDialog","openSnackbar","setOpenSnackbar","setBaseline","filter","setFilter","setTimeId","waiting","setWaiting","openMenu","setOpenMenu","React","anchorEl","setAnchorEl","reSearch","setReSearch","useMemo","createMuiTheme","primary","blue","classes","handleOpenAddDialog","uniqueNamesGenerator","randomColor","handleUp","handleDown","handleSnackbarClose","reason","selectItemByFilter","size","ok","msg","ret","re","RegExp","mapEntries","push","toLowerCase","indexOf","e","message","length","displayItems","handleMenuClose","ThemeProvider","CssBaseline","Menu","keepMounted","MenuItem","AppBar","className","Toolbar","IconButton","currentTarget","edge","Typography","InputBase","target","clearTimeout","setTimeout","placeholder","input","inputProps","FormControlLabel","control","Switch","checked","Backdrop","CircularProgress","Container","delete","flexDirection","verticalAlign","get","Fab","ipt","v4","newPersonItem","set","Snackbar","anchorOrigin","vertical","horizontal","toFixed","severity","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","headers","contentType","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.e7b38534.chunk.js","sourcesContent":["\nimport * as echarts from 'echarts';\nexport const themeName = \"my-dark-theme\";\nvar contrastColor = '#B9B8CE';\nvar axisCommon = function () {\n    return {\n        axisLine: {\n            lineStyle: {\n                color: contrastColor\n            }\n        },\n        splitLine: {\n            lineStyle: {\n                color: '#484753'\n            }\n        },\n        splitArea: {\n            areaStyle: {\n                color: ['rgba(255,255,255,0.02)', 'rgba(255,255,255,0.05)']\n            }\n        },\n        minorSplitLine: {\n            lineStyle: {\n                color: '#20203B'\n            }\n        }\n    };\n};\n\nvar colorPalette = [\n    '#4992ff',\n    '#7cffb2',\n    '#fddd60',\n    '#ff6e76',\n    '#58d9f9',\n    '#05c091',\n    '#ff8a45',\n    '#8d48e3',\n    '#dd79ff'\n];\nvar theme = {\n    darkMode: true,\n\n    color: colorPalette,\n    axisPointer: {\n        lineStyle: {\n            color: '#817f91'\n        },\n        crossStyle: {\n            color: '#817f91'\n        },\n        label: {\n            // TODO Contrast of label backgorundColor\n            color: '#fff'\n        }\n    },\n    legend: {\n        textStyle: {\n            color: contrastColor\n        }\n    },\n    textStyle: {\n        color: contrastColor\n    },\n    title: {\n        textStyle: {\n            color: '#EEF1FA'\n        },\n        subtextStyle: {\n            color: '#B9B8CE'\n        }\n    },\n    toolbox: {\n        iconStyle: {\n            borderColor: contrastColor\n        }\n    },\n    dataZoom: {\n        borderColor: '#71708A',\n        textStyle: {\n            color: contrastColor\n        },\n        brushStyle: {\n            color: 'rgba(135,163,206,0.3)'\n        },\n        handleStyle: {\n            color: '#353450',\n            borderColor: '#C5CBE3'\n        },\n        moveHandleStyle: {\n            color: '#B0B6C3',\n            opacity: 0.3\n        },\n        fillerColor: 'rgba(135,163,206,0.2)',\n        emphasis: {\n            handleStyle: {\n                borderColor: '#91B7F2',\n                color: '#4D587D'\n            },\n            moveHandleStyle: {\n                color: '#636D9A',\n                opacity: 0.7\n            }\n        },\n        dataBackground: {\n            lineStyle: {\n                color: '#71708A',\n                width: 1\n            },\n            areaStyle: {\n                color: '#71708A'\n            }\n        },\n        selectedDataBackground: {\n            lineStyle: {\n                color: '#87A3CE'\n            },\n            areaStyle: {\n                color: '#87A3CE'\n            }\n        }\n    },\n    visualMap: {\n        textStyle: {\n            color: contrastColor\n        }\n    },\n    timeline: {\n        lineStyle: {\n            color: contrastColor\n        },\n        label: {\n            color: contrastColor\n        },\n        controlStyle: {\n            color: contrastColor,\n            borderColor: contrastColor\n        }\n    },\n    calendar: {\n        dayLabel: {\n            color: contrastColor\n        },\n        monthLabel: {\n            color: contrastColor\n        },\n        yearLabel: {\n            color: contrastColor\n        }\n    },\n    timeAxis: axisCommon(),\n    logAxis: axisCommon(),\n    valueAxis: axisCommon(),\n    categoryAxis: axisCommon(),\n\n    line: {\n        symbol: 'circle'\n    },\n    graph: {\n        color: colorPalette\n    },\n    gauge: {\n        title: {\n            color: contrastColor\n        }\n    },\n    candlestick: {\n        itemStyle: {\n            color: '#FD1050',\n            color0: '#0CF49B',\n            borderColor: '#FD1050',\n            borderColor0: '#0CF49B'\n        }\n    }\n};\n\ntheme.categoryAxis.splitLine.show = false;\necharts.registerTheme(themeName, theme);\n","import React from 'react';\nimport ReactECharts from 'echarts-for-react';\nimport { themeName } from './mydarkmode';\n\nexport const DynamicChart: React.FC = function (props) {\n    const option = {\n        tooltip: {\n            trigger: 'axis'\n        },\n        xAxis: [\n            {\n                type: 'category',\n                data: props.data.x\n            }\n        ],\n        yAxis: [\n            {\n                type: 'value',\n                max: 1.5,\n                min: -1.5,\n            }\n        ],\n        series: [\n            {\n                name: props.name,\n                type: 'line',\n                data: props.data.y,\n                lineStyle: {\n                    color: props.color,\n                },\n                itemStyle: {\n                    color: props.color\n                },\n                smooth:true,\n                markLine: {\n                    silent: true,\n                    lineStyle: {\n                        color: '#b00020'\n                    },\n                    data: [{\n                        yAxis: props.baseline\n                    }],\n                    label: {\n                        show:false\n                    },\n                },\n            }\n        ]\n    }\n\n    return <ReactECharts\n        option={option}\n        style={{height: 350}}\n        theme={props.theme === \"dark\" ? themeName : \"light\"}\n    />;\n}\n\nexport default DynamicChart;","import React, {useEffect, useRef, useState} from 'react';\nimport DynamicChart from './DynamicChart';\nimport {Button, ButtonGroup, Hidden} from \"@material-ui/core\";\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Card from '@material-ui/core/Card';\nimport { Grid } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CameraIcon from '@material-ui/icons/PhotoCamera';\nimport PauseIcon from \"@material-ui/icons/PauseSharp\";\nimport PlayIcon from '@material-ui/icons/PlayArrow';\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\nconst TOTAL_POINT = 30;\n\nexport const Person: React.FC = function Person(props) {\n    const [working, setWorking] = useState(false);\n    const [showCamera, setShowCamera] = useState(false);\n    const [imgBase64, setImgBase64] = useState(\"\");\n    const [data, setData] = useState({ num: 0, y: [], x: [] })\n\n    const timeId = useRef(null);\n\n    const baseurl = `http://${props.ip}:${props.port}`;\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n    useEffect(() => {\n        function fetchNewData() {\n            fetch(baseurl + '/data')\n                .then(function (response) {\n                    return response.json();\n                })\n                .then(function (info) {\n                    let newData = {\n                        num: data.num + 1,\n                        x: data.x.concat(new Date().toLocaleTimeString()),\n                        y: data.y.concat(info.value)\n                    };\n\n                    if (newData.num > TOTAL_POINT) {\n                        newData.x.shift();\n                        newData.y.shift();\n                    }\n\n                    setData(newData);\n                })\n                .catch(error => {\n                    console.log(error);\n                });\n        }\n\n        if (working) {\n            timeId.current = setInterval(fetchNewData, 1000);\n        } else {\n            clearInterval(timeId.current);\n        }\n\n        return () => { clearInterval(timeId.current); }\n    }, [baseurl, working, data]);\n\n    const handleClose = () => setShowCamera(false);\n\n    function handleCameraClick() {\n        fetch(baseurl + '/camera')\n            .then(function(response) {\n                return response.json()\n            })\n            .then(function(info) {\n                setShowCamera(true);\n                setImgBase64(info.value);\n            })\n            .catch(function(error) {\n                setShowCamera(false);\n                console.log(\"Camera fetch failed:\" + error);\n            })\n    }\n\n    return (\n        <div>\n            <Card elevation={2} variant>\n                <Grid container spacing={0} direction=\"column\" alignItems=\"center\" justify=\"center\" >\n                <Grid item><h2>{props.name}</h2></Grid>\n                <Grid item><ButtonGroup variant=\"contained\" color=\"primary\" aria-label=\"contained primary button group\">\n                    <Button startIcon={working ? <PauseIcon/> : <PlayIcon/>} onClick={() => { setWorking(!working); }}><Hidden xsDown>开始/结束监控</Hidden></Button>\n\n                    <Button startIcon={<CameraIcon/>} onClick={handleCameraClick}><Hidden xsDown>打开摄像头</Hidden></Button>\n\n                    <Button startIcon={<DeleteIcon />} onClick={()=>{props.deleteCallback(props.uuid)}} color=\"secondary\"><Hidden xsDown>删除</Hidden></Button>\n                </ButtonGroup>\n                </Grid>\n            </Grid>\n\n            {/* <Grid item> */}\n                <DynamicChart baseline={props.baseline} data={data} name={props.name} color={props.color} theme={prefersDarkMode ? 'dark' : 'light'}/>\n                {/* </Grid> */}\n            </Card>\n\n            <Dialog\n                open={showCamera}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">{props.name + \"的摄像头\"}</DialogTitle>\n                <DialogContent>\n                    {\n                        imgBase64 === \"\" ?\n                            <DialogContentText>\n                                未检测到人脸。\n                            </DialogContentText> :\n                            <img id={\"camera\"} alt={props.name + \" Camara Picture\"} src={\"data:image/jpg;base64,\" + imgBase64} />\n                    }\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" autoFocus>\n                        OK\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}\n\nexport default Person;","import React from 'react';\nimport { Person } from './Person';\nimport { Box, Grid } from '@material-ui/core';\n\nexport const PersonList: React.FC = (props) => {\n    return (\n        <Box id=\"PersonList\" p={3}>\n            <Grid container spacing={2}>\n                {props.items.map((item) => (\n                    <Grid item xs={12} md={6} key={item.key}>\n                        <Person baseline={props.baseline} uuid={item.key} name={item.name} ip={item.ip} port={item.port} color={item.color} deleteCallback={props.deleteCallback} />\n                    </Grid>\n                ))}\n            </Grid>\n        </Box>\n    );\n}\n\nexport default PersonList;","import React  from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { BlockPicker } from 'react-color';\nimport { TextField, Button, Grid } from \"@material-ui/core\";\nimport { Refresh } from '@material-ui/icons';\n\nexport const AddDialog: React.FC = (props) => {\n    function handleKeyPress(event) {\n        if (event.code === \"Enter\" && props.open) {\n            props.handleSubmit();\n        }\n    }\n\n    return (\n        <Dialog open={props.open} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\" onKeyPress={handleKeyPress}>\n            <DialogTitle id=\"form-dialog-title\">监控后端信息</DialogTitle>\n            <DialogContent>\n                <Grid container direction=\"row\" spacing={2}>\n                    <Grid item>\n                        <Grid container direction=\"column\" spacing={2} alignItems=\"center\" justify=\"center\">\n                            <Grid item>\n                                <TextField label=\"Name:\" type=\"text\" name=\"name\" key=\"name\" onChange={props.handleInputChange} value={props.inputs.name} />\n                            </Grid>\n                            <Grid item><TextField label=\"IP:\" type=\"text\" name=\"ip\" key=\"ip\" onChange={props.handleInputChange}\n                                value={props.inputs.ip} /></Grid>\n                            <Grid item><TextField label=\"Port:\" type=\"number\" name=\"port\" key=\"port\" onChange={props.handleInputChange}\n                                value={props.inputs.port} /></Grid>\n                            <Grid item>\n                                <Button endIcon={<Refresh />} variant=\"outlined\" color='default' onClick={props.handleGenNameClick}>随机名字</Button>\n                            </Grid>\n                            <Grid item>\n                                <Button endIcon={<Refresh />} variant=\"outlined\" color='default' onClick={props.handleGenColorClick}>随机颜色</Button>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item>\n                        <Grid container direction=\"column\" spacing={2} alignItems=\"center\" justify=\"center\">\n                            <Grid item><p style={{\n                                textAlign: 'center',\n                                fontSize: 'large',\n                                fontWeight: 'bold', color: props.color\n                            }}>{props.inputs.name} @ {props.inputs.ip}:{props.inputs.port}</p></Grid>\n                            <Grid item><BlockPicker width={300} color={props.color} onChangeComplete={(x) => props.setColor(x.hex)} /></Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.handleClose} color=\"secondary\" variant=\"text\">\n                    取消\n                </Button>\n                <Button onClick={props.handleSubmit} color=\"primary\" variant=\"contained\">\n                    确认\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default AddDialog;","import React, {useMemo, useState} from 'react';\nimport PersonList from \"./PersonList\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Container from \"@material-ui/core/Container\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AddIcon from '@material-ui/icons/Add';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport randomColor from 'randomcolor';\nimport AddDialog from './AddDialog';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n// import Button from '@material-ui/core/Button';\nimport {fade, makeStyles} from '@material-ui/core/styles';\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport InputBase from '@material-ui/core/InputBase';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\n\nimport {v4} from \"uuid\";\nimport {OrderedMap, Map} from 'immutable';\nimport {blue} from \"@material-ui/core/colors\";\nimport {FormControlLabel, Hidden, Switch} from \"@material-ui/core\";\nimport {createMuiTheme, ThemeProvider} from '@material-ui/core/styles';\nimport {uniqueNamesGenerator, adjectives, animals} from 'unique-names-generator';\n\nconst genConfig = {\n    dictionaries: [adjectives, animals],\n    style: 'capital',\n    separator: ' '\n}\n\nconst ERROR_CODE = {\n    OK: 0,\n    FILTER_FORMAT_ERROR: -1,\n    NO_ITEM: -2,\n    NOT_FOUND: -3,\n}\n\nconst ERROR_CAPTION = Map(\n    [\n        [ERROR_CODE.FILTER_FORMAT_ERROR, \"请检查正则表达式语法！\"],\n        [ERROR_CODE.NO_ITEM, \"请点击右下方的按钮“+”添加后端\"],\n        [ERROR_CODE.NOT_FOUND, \"未检索到符合要求的后端\"],\n        [ERROR_CODE.OK, \"OK!\"]\n    ]\n)\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        flexGrow: 1,\n    },\n    appbar: {\n        zIndex: 9\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n    fabGroup: {\n        position: 'fixed',\n        bottom: theme.spacing(4),\n        right: theme.spacing(4),\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(3),\n            width: 'auto',\n        },\n        zIndex: 10\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: '20ch',\n        },\n    },\n    backdrop: {\n        position: \"absolute\",\n        zIndex: 4\n    }\n}));\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst App: React.FC = (props) => {\n    const [inputs, setInputs] = useState({\n        name: \"\",\n        ip: \"127.0.0.1\",\n        port: 5000\n    })\n    const [items: OrderedMap, setItems] = useState(OrderedMap());\n    const [openAddDialog, setOpenAddDialog] = useState(false);\n    const [openSnackbar, setOpenSnackbar] = useState(false);\n    const [baseline, setBaseline] = useState(0.15);\n    const [color, setColor] = useState(\"#000\");\n    const [filter, setFilter] = useState(\"\");\n    const [timeId, setTimeId] = useState(0);\n    const [waiting, setWaiting] = useState(false);\n    const [openMenu, setOpenMenu] = useState(false);\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [reSearch, setReSearch] = useState(false);\n\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n    const theme = React.useMemo(\n        () =>\n            createMuiTheme({\n                palette: {\n                    primary: blue,\n                    // secondary: deepOrange,\n                    type: prefersDarkMode ? 'dark' : 'light',\n                },\n            }),\n        [prefersDarkMode],\n    );\n\n    const classes = useStyles();\n\n    function handleSubmit() {\n        const uuid = v4();\n        // console.log(uuid);\n        const newPersonItem = {\n            name: inputs.name,\n            ip: inputs.ip,\n            port: inputs.port,\n            color\n        };\n        setItems(items.set(uuid, newPersonItem));\n        setOpenAddDialog(false);\n    }\n\n    function handleClose() {\n        setOpenAddDialog(false);\n    }\n\n    function handleOpenAddDialog() {\n        setOpenAddDialog(true);\n        setInputs({\n            name: uniqueNamesGenerator(genConfig),\n            ip: \"127.0.0.1\",\n            port: 5000\n        })\n        setColor(randomColor());\n    }\n\n    function handleGenNameClick() {\n        setInputs({...inputs, name: uniqueNamesGenerator(genConfig)})\n    }\n\n    function handleGenColorClick() {\n        setColor(randomColor());\n    }\n\n    const deleteItem = (uuid) => {\n        // console.log(\"delete:\", uuid)\n        setItems(items.delete(uuid));\n    }\n\n    const handleInputChange = ({target: {name, value}}) => {\n        setInputs(ipt => ({...ipt, [name]: value}))\n    }\n\n    function handleUp() {\n        setOpenSnackbar(true);\n        setBaseline(baseline + 0.05)\n    }\n\n    function handleDown() {\n        setOpenSnackbar(true);\n        setBaseline(baseline - 0.05)\n    }\n\n    function handleSnackbarClose(event, reason) {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpenSnackbar(false);\n    }\n\n    useMemo(selectItemByFilter, [reSearch, filter, items]);\n\n    function selectItemByFilter() {\n        if (items.size === 0) return {ok: ERROR_CODE.NO_ITEM, data: [], msg: \"No item.\"};\n        let ret: Array = []\n        try {\n            if (reSearch) {\n                let re: RegExp = new RegExp(filter, \"i\");\n                items.mapEntries(([key, value]) => {\n                    if (value.name.search(re) !== -1) {\n                        ret.push({...value, key: key})\n                    }\n                });\n            } else {\n                items.mapEntries(([key, value]) => {\n                    if (value.name.toLowerCase().indexOf(filter.toLowerCase()) !== -1) {\n                        ret.push({...value, key: key})\n                    }\n                });\n            }\n        } catch (e) {\n            console.log(e.message);\n            return {ok: ERROR_CODE.FILTER_FORMAT_ERROR, data: [], msg: e.message}\n        }\n        return {ok: (ret.length > 0 ? ERROR_CODE.OK : ERROR_CODE.NOT_FOUND), data: ret, msg: \"Search OK\"};\n    }\n\n    function onSearchChange({target: {value}}) {\n        setWaiting(true);\n        if (timeId !== 0) {\n            clearTimeout(timeId);\n            setTimeId(0);\n        }\n        setTimeId(setTimeout(() => {\n            if (filter !== value) setFilter(value);\n            setWaiting(false);\n        }, 500));\n    }\n\n    function onUseReChange({target: {checked}}) {\n        setWaiting(true);\n        if (timeId !== 0) {\n            clearTimeout(timeId);\n            setTimeId(0);\n        }\n        setTimeId(setTimeout(() => {\n            if (reSearch !== checked) setReSearch(checked);\n            setWaiting(false);\n        }, 500));\n    }\n\n    let displayItems = selectItemByFilter();\n\n    function onMenuClick(event) {\n        setAnchorEl(event.currentTarget);\n        setOpenMenu(true);\n    }\n\n    function handleMenuClose() {\n        setAnchorEl(null);\n        setOpenMenu(false);\n    }\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline/>\n            <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={openMenu}\n                onClose={handleMenuClose}\n            >\n                <MenuItem onClick={() => {\n                    handleOpenAddDialog();\n                    handleMenuClose();\n                }}>Add...</MenuItem>\n                <MenuItem onClick={() => {\n                    handleUp();\n                    handleMenuClose();\n                }}>+0.05 to baseline</MenuItem>\n                <MenuItem onClick={() => {\n                    handleDown();\n                    handleMenuClose();\n                }}>-0.05 to baseline</MenuItem>\n            </Menu>\n            <AppBar position=\"static\" className={classes.appbar}>\n                <Toolbar>\n                        <IconButton onClick={onMenuClick} edge=\"start\" className={classes.menuButton} color=\"inherit\"\n                                    aria-label=\"menu\">\n                            <MenuIcon/>\n                        </IconButton>\n                    <Hidden xsDown>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        Hawkeye\n                    </Typography>\n                    </Hidden>\n                    <div className={classes.search}>\n                        <div className={classes.searchIcon}>\n                            <SearchIcon/>\n                        </div>\n                        <InputBase\n                            onChange={onSearchChange}\n                            placeholder=\"Search…\"\n                            classes={{\n                                root: classes.inputRoot,\n                                input: classes.inputInput,\n                            }}\n                            inputProps={{'aria-label': 'search'}}\n                        />\n                    </div>\n                    <FormControlLabel control={\n                        <Switch\n                            checked={reSearch}\n                            onChange={onUseReChange}\n                            color=\"secondary\"\n                            name=\"useReSearch\"\n                            inputProps={{'aria-label': 'use RE-search switch'}}\n                        />}\n                                      label={<Hidden xsDown>Use RegExp?</Hidden>}\n                    />\n                    {/*<Button color=\"inherit\">Login</Button>*/}\n                </Toolbar>\n            </AppBar>\n\n            <div className={classes.root}>\n\n                <Backdrop open={waiting} className={classes.backdrop}>\n                    <CircularProgress color=\"inherit\"/>\n                </Backdrop>\n\n                {displayItems.ok === ERROR_CODE.OK ?\n                    <Container>\n                        <PersonList items={displayItems.data} deleteCallback={deleteItem} baseline={baseline}/>\n                    </Container>\n                    :\n                    <div style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"center\",\n                        textAlign: 'center',\n                        verticalAlign: 'center',\n                        width: '100vw',\n                        height: '80vh',\n                    }}>\n                        <Box color=\"text.secondary\" fontSize=\"h2.fontSize\">{ERROR_CAPTION.get(displayItems.ok)}</Box>\n                    </div>\n                }\n\n                <div className={classes.fabGroup}>\n                    <Grid container direction=\"column\" spacing={2} alignItems=\"center\" justify=\"center\">\n                        <Grid item><Fab color=\"secondary\" aria-label=\"up\" onClick={handleUp}>\n                            <KeyboardArrowUpIcon/>\n                        </Fab></Grid>\n                        <Grid item><Fab color=\"secondary\" aria-label=\"down\" onClick={handleDown}>\n                            <KeyboardArrowDownIcon/>\n                        </Fab></Grid>\n                        <Grid item><Fab color=\"primary\" aria-label=\"add\" onClick={handleOpenAddDialog}>\n                            <AddIcon/>\n                        </Fab></Grid>\n                    </Grid>\n                </div>\n\n                <AddDialog\n                    color={color}\n                    handleClose={handleClose}\n                    handleGenColorClick={handleGenColorClick}\n                    handleGenNameClick={handleGenNameClick}\n                    handleInputChange={handleInputChange}\n                    handleSubmit={handleSubmit}\n                    inputs={inputs}\n                    open={openAddDialog}\n                    setColor={setColor}\n                />\n\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    message={\"New baseline is: \" + baseline.toFixed(2)}\n                    open={openSnackbar}\n                    // autoHideDuration={3000}\n                    onClose={handleSnackbarClose}\n                >\n                    <Alert onClose={handleSnackbarClose} severity=\"info\">\n                        {\"New baseline is: \" + baseline.toFixed(2)}\n                    </Alert>\n                </Snackbar>\n\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    message={displayItems.msg}\n                    open={displayItems.ok === ERROR_CODE.FILTER_FORMAT_ERROR}\n                >\n                    <Alert severity=\"error\">\n                        {displayItems.msg}\n                    </Alert>\n                </Snackbar>\n            </div>\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}